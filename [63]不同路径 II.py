# ‰∏Ä‰∏™Êú∫Âô®‰∫∫‰Ωç‰∫é‰∏Ä‰∏™ m x n ÁΩëÊ†ºÁöÑÂ∑¶‰∏äËßí ÔºàËµ∑ÂßãÁÇπÂú®‰∏ãÂõæ‰∏≠Ê†áËÆ∞‰∏∫‚ÄúStart‚Äù Ôºâ„ÄÇ 
# 
#  Êú∫Âô®‰∫∫ÊØèÊ¨°Âè™ËÉΩÂêë‰∏ãÊàñËÄÖÂêëÂè≥ÁßªÂä®‰∏ÄÊ≠•„ÄÇÊú∫Âô®‰∫∫ËØïÂõæËææÂà∞ÁΩëÊ†ºÁöÑÂè≥‰∏ãËßíÔºàÂú®‰∏ãÂõæ‰∏≠Ê†áËÆ∞‰∏∫‚ÄúFinish‚ÄùÔºâ„ÄÇ 
# 
#  Áé∞Âú®ËÄÉËôëÁΩëÊ†º‰∏≠ÊúâÈöúÁ¢çÁâ©„ÄÇÈÇ£‰πà‰ªéÂ∑¶‰∏äËßíÂà∞Âè≥‰∏ãËßíÂ∞Ü‰ºöÊúâÂ§öÂ∞ëÊù°‰∏çÂêåÁöÑË∑ØÂæÑÔºü 
# 
#  
# 
#  ÁΩëÊ†º‰∏≠ÁöÑÈöúÁ¢çÁâ©ÂíåÁ©∫‰ΩçÁΩÆÂàÜÂà´Áî® 1 Âíå 0 Êù•Ë°®Á§∫„ÄÇ 
# 
#  
# 
#  Á§∫‰æã 1Ôºö 
# 
#  
# ËæìÂÖ•ÔºöobstacleGrid = [[0,0,0],[0,1,0],[0,0,0]]
# ËæìÂá∫Ôºö2
# Ëß£ÈáäÔºö
# 3x3 ÁΩëÊ†ºÁöÑÊ≠£‰∏≠Èó¥Êúâ‰∏Ä‰∏™ÈöúÁ¢çÁâ©„ÄÇ
# ‰ªéÂ∑¶‰∏äËßíÂà∞Âè≥‰∏ãËßí‰∏ÄÂÖ±Êúâ 2 Êù°‰∏çÂêåÁöÑË∑ØÂæÑÔºö
# 1. ÂêëÂè≥ -> ÂêëÂè≥ -> Âêë‰∏ã -> Âêë‰∏ã
# 2. Âêë‰∏ã -> Âêë‰∏ã -> ÂêëÂè≥ -> ÂêëÂè≥
#  
# 
#  Á§∫‰æã 2Ôºö 
# 
#  
# ËæìÂÖ•ÔºöobstacleGrid = [[0,1],[0,0]]
# ËæìÂá∫Ôºö1
#  
# 
#  
# 
#  ÊèêÁ§∫Ôºö 
# 
#  
#  m == obstacleGrid.length 
#  n == obstacleGrid[i].length 
#  1 <= m, n <= 100 
#  obstacleGrid[i][j] ‰∏∫ 0 Êàñ 1 
#  
#  Related Topics Êï∞ÁªÑ Âä®ÊÄÅËßÑÂàí 
#  üëç 515 üëé 0


# leetcode submit region begin(Prohibit modification and deletion)
class Solution:
    def uniquePathsWithObstacles(self, obstacleGrid: List[List[int]]) -> int:
        if obstacleGrid[0][0] == 1:
            return 0
        obstacleGrid[0][0] = 1
        m = len(obstacleGrid)
        n = len(obstacleGrid[0])
        for i in range(1, n):
            if obstacleGrid[0][i] == 1:
                obstacleGrid[0][i] = -1
            else:
                if obstacleGrid[0][i - 1] == -1:
                    obstacleGrid[0][i] = -1
                else:
                    obstacleGrid[0][i] = obstacleGrid[0][i - 1]
        for j in range(1, m):
            if obstacleGrid[j][0] == 1:
                obstacleGrid[j][0] = -1
            else:
                if obstacleGrid[j - 1][0] == -1:
                    obstacleGrid[j][0] = -1
                else:
                    obstacleGrid[j][0] = obstacleGrid[j - 1][0]

        for i in range(1, m):
            for j in range(1, n):
                if obstacleGrid[i][j] == 1:
                    obstacleGrid[i][j] = -1
                else:
                    if obstacleGrid[i - 1][j] != -1:
                        obstacleGrid[i][j] += obstacleGrid[i - 1][j]
                    if obstacleGrid[i][j - 1] != -1:
                        obstacleGrid[i][j] += obstacleGrid[i][j - 1]
        if obstacleGrid[m - 1][n - 1] != -1:
            return obstacleGrid[m - 1][n - 1]
        else:
            return 0
# leetcode submit region end(Prohibit modification and deletion)
